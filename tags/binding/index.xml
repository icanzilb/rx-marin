<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>binding on rx_marin&lt;blog&gt;</title>
    <link>http://rx-marin.com/tags/binding/</link>
    <description>Recent content in binding on rx_marin&lt;blog&gt;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://rx-marin.com/tags/binding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Binding to a table view with multiple cells and sections</title>
      <link>http://rx-marin.com/post/bind-multiple-cells/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rx-marin.com/post/bind-multiple-cells/</guid>
      <description>One of the questions that keeps popping up in the RxSwift Slack channel for years now is how to display multiple cell types when binding data to a table view.
This is actually very easy to do and in this post I&amp;rsquo;ll show you two distinct ways to display multiple cells in a table view (and it works identically for collection views if that&amp;rsquo;s what you&amp;rsquo;re looking for).
We&amp;rsquo;ll look at the following two use cases:</description>
    </item>
    
    <item>
      <title>Introducing RxAnimated</title>
      <link>http://rx-marin.com/post/rxanimated-intro/</link>
      <pubDate>Tue, 31 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://rx-marin.com/post/rxanimated-intro/</guid>
      <description>RxCocoa is super powerful for UI bindings - you can use bind(to:) to bind pretty much any kind of observable to a UI Control of your choice. You can bind a String to a UILabel, UIImage to a UIImageView, or an array of objects to UITableView or UICollectionView.
Now, for table and collection view bindings there is a special library to allow you to bind a list of objects called RxDataSources and besides all the other goodness the library can add animations to your bindings.</description>
    </item>
    
    <item>
      <title>Custom property bindings with RxSwift</title>
      <link>http://rx-marin.com/post/rxswift-custom-bindings/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://rx-marin.com/post/rxswift-custom-bindings/</guid>
      <description>Recently, in one of the few meetups I&amp;rsquo;ve been in person to, someone told me the didn&amp;rsquo;t try RxSwift because somebody told them that RxSwift doesn&amp;rsquo;t support custom views.
While I&amp;rsquo;m still baffled what that original person meant, I thought the best way to disagree is to write a short tutorial to prove them wrong.
What are custom property sinks? When you use RxCocoa bindings you can easily bind the values an observable emits to some view on screen like so:</description>
    </item>
    
  </channel>
</rss>
