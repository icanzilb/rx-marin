<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unit tests on rx_marin&lt;blog&gt;</title>
    <link>http://rx-marin.com/tags/unit-tests/</link>
    <description>Recent content in unit tests on rx_marin&lt;blog&gt;</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 May 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://rx-marin.com/tags/unit-tests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testing your RxSwift code, part 2</title>
      <link>http://rx-marin.com/post/rxswift-rxtests-unit-tests-part-2/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://rx-marin.com/post/rxswift-rxtests-unit-tests-part-2/</guid>
      <description>In part 1 I looked into writing very basic tests with RxSwift and life was good. But then I wanted to do more and moved on to writing asynchronous tests&amp;hellip;
I contributed the code for RxRealm - the Rx extension for RealmSwift owned by the RxSwiftCommunity. For RxRealm I needed some asynchronous tests because Realm&amp;rsquo;s collections emit notifications (which RxRealm wraps) when the underlaying data changes.
So let&amp;rsquo;s have a look at some of the unit tests I wrote&amp;hellip;</description>
    </item>
    
    <item>
      <title>Testing your RxSwift code, part 1</title>
      <link>http://rx-marin.com/post/rxswift-rxtests-unit-tests/</link>
      <pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://rx-marin.com/post/rxswift-rxtests-unit-tests/</guid>
      <description>I sat down recently and learned the basics of writing unit tests for RxSwift. It was way easier than I expected and that&amp;rsquo;s why I&amp;rsquo;d like to show few of the tests I got to write.
Before I start on the code itself I just want to mention how great contributing to open source is. If I didn&amp;rsquo;t jump in to helping around on the RxSwift-Ext project I&amp;rsquo;d probably haven&amp;rsquo;t looked into writing unit tests with RxSwift yet, but I did - and that&amp;rsquo;s great.</description>
    </item>
    
  </channel>
</rss>
